name: C/C++ CI

on: [push, pull_request]

jobs:
  build:
    name: build (${{ matrix.cc }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc: [ 'gcc', 'clang' ]
    env:
      CC: ${{ matrix.cc }}
    steps:
    - uses: actions/checkout@v2
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main' -y
        sudo apt-get update -q
    - name: install dependencies
      run: sudo apt-get install -y autopoint clang-10 gettext
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: ./configure --enable-werror
      env:
        CFLAGS: -D_FORTIFY_SOURCE=2
    - name: make
      run: make
    - name: make check
      run: make check || (cat tests/test-suite.log; exit 1)
    - name: make install
      run: sudo make install
    - name: make distcheck
      run: make distcheck

  analyzer_clang:
    name: static analysis (clang)
    runs-on: ubuntu-latest
    env:
      CC: clang
    steps:
    - uses: actions/checkout@v2
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main' -y
        sudo apt-get update -q
    - name: install dependencies
      run: sudo apt-get install -y autopoint clang-10 clang-tools-10 gettext
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: scan-build-10 -analyze-headers --status-bugs -disable-checker deadcode.DeadStores ./configure --enable-werror
    - name: make
      run: scan-build-10 -analyze-headers --status-bugs -disable-checker deadcode.DeadStores make
    - name: make check
      run: scan-build-10 -analyze-headers --status-bugs -disable-checker deadcode.DeadStores make check || (cat tests/test-suite.log; exit 1)

  sanitizer_clang:
    name: sanitizer (clang)
    runs-on: ubuntu-latest
    env:
      CC: clang
    steps:
    - uses: actions/checkout@v2
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main' -y
        sudo apt-get update -q
    - name: install dependencies
      run: sudo apt-get install -y autopoint clang-10 gettext
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: ./configure --enable-werror
      env:
        CFLAGS: '-O1 -g -fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer -fsanitize=undefined -fsanitize=nullability -fsanitize=implicit-conversion -fsanitize=integer -fsanitize=float-divide-by-zero -fsanitize=local-bounds'
    - name: make
      run: make
    - name: make check
      run: make check || (cat tests/test-suite.log; exit 1)
      env:
        ASAN_OPTIONS: strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1
        UBSAN_OPTIONS: print_stacktrace=1:print_summary=1:halt_on_error=1
